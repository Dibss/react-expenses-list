{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","preSelectedYear","onChange","event","console","log","target","onSelectedYear","Card","classes","children","ExpenseDate","month","date","toLocaleString","year","day","getFullYear","ExpenseItem","title","amount","ExpensesList","expensesContent","items","length","map","item","id","ChartBar","fillValueHeight","maxValue","Math","round","style","height","label","Chart","valuesArr","dataPoints","dataPoint","totMax","max","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredList","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","required","min","step","onClick","closeForm","NewExpense","isAdding","setIsAdding","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.60f7acf4.chunk.js","sourcesContent":["import \"./css/ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const yearChangeHandler = (event) => {\r\n\r\n    console.log('in ExpensesFilter:', event.target.value);\r\n\r\n    props.onSelectedYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.preSelectedYear} onChange={yearChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./Card.css\";\r\n\r\nconst Card = props => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return(\r\n    <div className={classes}>{props.children}</div>\r\n  )\r\n}\r\n\r\nexport default Card;","import \"./css/ExpenseDate.css\";\r\n\r\nconst ExpenseDate = props => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const day = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./css/ExpenseItem.css\";\r\n\r\nconst ExpenseItem = props => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}/>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n\r\n\r\n// EXTRA CODE TO OPTIONALLY INIT TITLE CHANGE\r\n// import React, {useState} from \"react\";\r\n\r\n// firstValue = current state value, secondValue = function to update the first value\r\n// const [title, setTitle] = useState(props.title);\r\n\r\n// const clickHandler = () => {\r\n//   setTitle('Updated!');\r\n//   console.log(title)\r\n// }\r\n\r\n//<button onClick={clickHandler}>Change title</button>","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./css/ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n\r\n  let expensesContent = <p className=\"expenses-list__fallback\">No expenses found</p>;\r\n\r\n  if(props.items.length > 0){\r\n    expensesContent = props.items.map((item) => (\r\n      <ExpenseItem\r\n        title={item.title}\r\n        amount={item.amount}\r\n        date={item.date}\r\n        key={item.id}\r\n      />\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {expensesContent}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ExpensesList;","import \"./ChartBar.css\"\r\n\r\nconst ChartBar = props => {\r\n\r\n  let fillValueHeight = '0%';\r\n\r\n  if(props.maxValue > 0){\r\n    fillValueHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{height: fillValueHeight}}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChartBar;","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n\r\n  const valuesArr = props.dataPoints.map(dataPoint => dataPoint.value)\r\n\r\n  const totMax = Math.max(...valuesArr)\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          value={dataPoint.value}\r\n          maxValue={totMax}\r\n          label={dataPoint.label}\r\n          key={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = props => {\r\n\r\n  const chartDataPoints = [\r\n    {label: 'Jan', value: 0},\r\n    {label: 'Feb', value: 0},\r\n    {label: 'Mar', value: 0},\r\n    {label: 'Apr', value: 0},\r\n    {label: 'May', value: 0},\r\n    {label: 'Jun', value: 0},\r\n    {label: 'Jul', value: 0},\r\n    {label: 'Aug', value: 0},\r\n    {label: 'Sep', value: 0},\r\n    {label: 'Oct', value: 0},\r\n    {label: 'Nov', value: 0},\r\n    {label: 'Dec', value: 0},\r\n  ]\r\n\r\n  for(const expense of props.expenses){\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart;","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./css/Expenses.css\";\r\n\r\nconst Expenses = props => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const filterYear = (selectedYear) => {\r\n    console.log(\"in Expenses:\", selectedYear);\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredList = props.items.filter(\r\n    (item) => item.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        preSelectedYear={filteredYear}\r\n        onSelectedYear={filterYear}\r\n      />\r\n      <ExpensesChart expenses={filteredList}/>\r\n      <ExpensesList items={filteredList}/>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./css/ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\r\n  // la parte commentata è un altro modo per raggruppare tutti i useState()\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return {...prevState, enteredTitle: event.target.value,}\r\n    // })\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    // to prevent the page to reload\r\n    event.preventDefault();\r\n    \r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    // per passare expenseData a NewExpense.js\r\n    props.onSaveExpenseData(expenseData);\r\n    \r\n    // per svuotare il form dopo aver premuto submit\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            // il value serve per svuotare l'input\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n            required\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.closeForm}>Cancel</button>\r\n        <button type=\"submit\">Add expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./css/NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsAdding(false);\r\n  };\r\n\r\n  const addHandler = () => {\r\n    setIsAdding(true);\r\n  };\r\n\r\n  const closeClickHandler = () => {\r\n    setIsAdding(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isAdding && <button type=\"button\" onClick={addHandler}>Add new expense</button>}\r\n      {isAdding && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} closeForm={closeClickHandler}/>}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default NewExpense;","import React, {useState} from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { \n    id: \"e2\", \n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    \n    console.log('in App newExpense:', expense);\n    console.log('dummy-expenses:', expenses);\n\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    });\n\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </div>\n  );\n\n  // *\n  // *\n  // * vecchio modo di scrivere html, importando React in ogni componente invece di ReactDom nell'index.js\n\n  // return React.createElement(\n  //   'div',\n  //   React.createElement(Expenses, {items: expenses})\n  // )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}