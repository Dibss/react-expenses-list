{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","year","day","getFullYear","ExpenseItem","title","amount","ExpensesFilter","value","preSelectedYear","onChange","event","console","log","target","onSelectedYear","Expenses","useState","filteredYear","setFilteredYear","selectedYear","items","map","item","id","ExpenseForm","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","max","NewExpense","enteredExpenseData","Math","random","toString","onAddExpense","DUMMY_EXPENSES","App","expenses","setExpenses","expense","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.40e9ed8c.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = props => {\r\n  const classes = 'card ' + props.className;\r\n\r\n  return(\r\n    <div className={classes}>{props.children}</div>\r\n  )\r\n}\r\n\r\nexport default Card;","import \"./css/ExpenseDate.css\";\r\n\r\nconst ExpenseDate = props => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const day = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import Card from \"../UI/Card\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./css/ExpenseItem.css\";\r\n\r\nconst ExpenseItem = props => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date}/>\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n\r\n\r\n// EXTRA CODE TO OPTIONALLY INIT TITLE CHANGE\r\n// import React, {useState} from \"react\";\r\n\r\n// firstValue = current state value, secondValue = function to update the first value\r\n// const [title, setTitle] = useState(props.title);\r\n\r\n// const clickHandler = () => {\r\n//   setTitle('Updated!');\r\n//   console.log(title)\r\n// }\r\n\r\n//<button onClick={clickHandler}>Change title</button>","import \"./css/ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const yearChangeHandler = (event) => {\r\n\r\n    console.log('in ExpensesFilter:', event.target.value);\r\n\r\n    props.onSelectedYear(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.preSelectedYear} onChange={yearChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./css/Expenses.css\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2021\");\r\n\r\n  const filterYear = (selectedYear) => {\r\n    console.log(\"in Expenses:\", selectedYear);\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        preSelectedYear={filteredYear}\r\n        onSelectedYear={filterYear}\r\n      />\r\n      {props.items.map((item) => (\r\n        <ExpenseItem \r\n          title={item.title} \r\n          amount={item.amount} \r\n          date={item.date}\r\n          key={item.id}\r\n        />\r\n      ))}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./css/ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n\r\n  // la parte commentata Ã¨ un altro modo per raggruppare tutti i useState()\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n\r\n    // setUserInput((prevState) => {\r\n    //   return {...prevState, enteredTitle: event.target.value,}\r\n    // })\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n  \r\n  const submitHandler = (event) => {\r\n    // to prevent the page to reload\r\n    event.preventDefault();\r\n    \r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    // per passare expenseData a NewExpense.js\r\n    props.onSaveExpenseData(expenseData);\r\n    \r\n    // per svuotare il form dopo aver premuto submit\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            // il value serve per svuotare l'input\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\">Add expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import ExpenseForm from \"./ExpenseForm\";\r\nimport \"./css/NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const saveExpenseDataHandler = enteredExpenseData => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    props.onAddExpense(expenseData);\r\n  }\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewExpense;","import React, {useState} from \"react\";\n\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { \n    id: \"e2\", \n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2021, 2, 12)\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    \n    console.log('in App newExpense:', expense);\n    console.log('dummy-expenses:', expenses);\n\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses]\n    });\n\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </div>\n  );\n\n  // *\n  // *\n  // * vecchio modo di scrivere html, importando React in ogni componente invece di ReactDom nell'index.js\n\n  // return React.createElement(\n  //   'div',\n  //   React.createElement(Expenses, {items: expenses})\n  // )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}